

CREATE TABLE EMP(
	FIRSTNAME VARCHAR(15),
	LASTNAME VARCHAR(15),
	CONSTRAINT PK_EMP PRIMARY KEY (LASTNAME)
);
CREATE TABLE TEAM(
	TNUMBER NUMERIC PRIMARY KEY,
	TNAME VARCHAR(10)
);
CREATE TABLE TEAM_EMP(
	TNO NUMERIC REFERENCES TEAM(TNUMBER),
	SURNAME VARCHAR(15),
	PLAY_TIME NUMERIC(2),

	-- CONSTRAINT FK_TEAM FOREIGN KEY (TNO) REFERENCES TEAM(TNUMBER) ON DELETE CASCADE,
   	CONSTRAINT FK_EMP FOREIGN KEY (SURNAME) REFERENCES EMP (LASTNAME) ON DELETE CASCADE,
	CONSTRAINT PLAY_TIME_CK CHECK (PLAY_TIME<12)
);
DROP TABLE TEAM_EMP;
DROP TABLE EMP;

















--1 no’lu projede çalışan kişinin departman yöneticisinin çalıştığı tüm projelerin numaralarını listeleyen sorguyu yazınız.

SELECT W2.PNO
FROM WORKS_ON W1, WORKS_ON W2, EMPLOYEE, DEPARTMENT
WHERE W1.PNO=1 AND SSN=W1.ESSN AND DNO=DNUMBER AND W2.ESSN=MGRSSN;

--Maaşı 20000 ile 40000 arasında olan çalışanların isimlerini ve maaşlarını gösteren bir view yazınız.

CREATE VIEW MAASLAR
AS
SELECT FNAME, LNAME, SALARY
FROM EMPLOYEE
WHERE SALARY BETWEEN 20000 AND 40000;

--NOT: employee tablosundan bu view’ı etkileyen bir bilgi sildiğimizde view otomatik olarak güncellenir.
SELECT * FROM MAASLAR;

--9’dan başlayıp 99’ a kadar birer bire artan bir sequence oluşturun.
CREATE SEQUENCE SEQ
MINVALUE 9
MAXVALUE 99
INCREMENT BY 1;

SELECT * FROM SEQ;

CREATE TABLE TEST(
	SEQ_VALUE NUMERIC,
	LETTER VARCHAR(1)
)

SELECT * FROM TEST;

INSERT INTO TEST VALUES(NEXTVAL('SEQ'), 'A');
INSERT INTO TEST VALUES(NEXTVAL('SEQ'), 'A');
INSERT INTO TEST VALUES(NEXTVAL('SEQ'), 'A');
INSERT INTO TEST VALUES(NEXTVAL('SEQ'), 'A');
INSERT INTO TEST VALUES(NEXTVAL('SEQ'), 'A');
INSERT INTO TEST VALUES(NEXTVAL('SEQ'), 'A');
INSERT INTO TEST VALUES(NEXTVAL('SEQ'), 'A');
INSERT INTO TEST VALUES(NEXTVAL('SEQ'), 'A');
INSERT INTO TEST VALUES(NEXTVAL('SEQ'), 'A');
INSERT INTO TEST VALUES(NEXTVAL('SEQ'), 'A');

SELECT * FROM TEST;

--”OperatingSystems” isimli projede ve “Software” departmanında çalışanların ad, soyad bilgilerini bulunuz.

SELECT FNAME, LNAME
FROM EMPLOYEE, PROJECT, WORKS_ON
WHERE PNAME='OperatingSystems' AND PNUMBER=PNO AND ESSN=SSN

INTERSECT

SELECT FNAME, LNAME
FROM DEPARTMENT, EMPLOYEE
WHERE DNAME='Software' AND DNUMBER=DNO;

--Hiçbir departmanın veya hiçbir çalışanın yöneticisi olmayan çalışanların isimlerini bulunuz.

SELECT FNAME
FROM EMPLOYEE E1
WHERE NOT EXISTS (SELECT * FROM DEPARTMENT WHERE MGRSSN=E1.SSN) AND NOT EXISTS (SELECT NULL FROM EMPLOYEE E2 WHERE E1.SSN=E2.SUPERSSN);

--İsmi ‘John’ olan işçilerin çalıştıkları departmanların isimlerini IN kullanarak bulunuz.

SELECT DNAME
FROM DEPARTMENT
WHERE DNUMBER IN (SELECT DNO FROM EMPLOYEE WHERE FNAME='John');

--‘Sales’ departmanında kaç kişinin çalıştığını, en düşük, en yüksek, ortalama ve toplam maaşı bulunuz.

SELECT COUNT(SALARY), MIN(SALARY), MAX(SALARY), AVG(SALARY), SUM(SALARY)
FROM EMPLOYEE, DEPARTMENT
WHERE DNAME='Sales' AND DNUMBER=DNO;


